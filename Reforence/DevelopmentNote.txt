개발 노트

- connect : 앞의 이벤트가 호출되었을 때, 자동으로 괄호 안의 이벤트 처리 메서드를 호출한다.
            * 이벤트 처리 메서드는 이벤트 메서드의 원형을 참조해서 구현해야 한다. 즉, 이벤트 처리 메서드는
            이벤트 메서드의 입력인자를 동일하게 인자로 받아 처리한다.

- dynamicCall : Open API의 메서드를 사용하기 위해서, QAXWidget의 인스턴스에서 dynamicCall 메서드를 사용한다.
                인자에 호출하려는 메서드를 문자열 형식으로 입력해주면 된다.
                호출하려는 메서드의 인자에 값을 넣기 위해선, 문자열에 자료형을 넣어주고 그 뒤 인자로 값을 준다.
                e.g. sendCondition("0000", "이름", 1, 0)
                      --> dynamicCall("sendCondition(QString, QString, int, int)", "0000", "이름", 1, 0)
                string이 아니라 QString 임에 유의.

- Module PyQt5 : * 위젯 인스턴스를 생성할 때, window 안에 속하게 하기 위해선 window 인스턴스를 인자로 받아준다
                 - QLabel: 텍스트 출력용 클래스  -

                 - QLineEdit : 사용자 입력용 클래스  - text : 입력 문자열을 반환하는 메서드
                                                   -

                 - QPushButton : 버튼생성용 클래스  -

                 - QTextEdit : 실행결과 메시지출력용 클래스  - setText : 초기값출력 메서드
                                                          - append : 인스턴스에 문자열을 추가하는 메서드

- strip : 문자열의 공백을 제거하는 메서드

- 다른 메서드에서 변수/인스턴스를 사용하려면 (인스턴스.변수)로 바인딩하자.